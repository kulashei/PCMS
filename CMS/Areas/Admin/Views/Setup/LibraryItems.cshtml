@using DevExtreme.AspNet.Mvc
@* <script src="~/js/moment.js"></script>
<link href="~/css/custom/formstyle.css" rel="stylesheet" />
 *@
@using CMS.Models

@(Html.DevExtreme().TabPanel()
    .ID("tabpanel-container")
    .SelectedIndex(0)
    .Loop(false)
    .AnimationEnabled(true)
    .SwipeEnabled(true)
    .Width("100%")
    .Items(tabs =>
    {
        tabs.Add().Title("FIRST DIVISION")
            .Template(@<text>

                           <div style="padding:20px">
                               @(Html.DevExtreme().DataGrid<StandardAct>()
                                   .Width("100%")
                                   .Height(460)
                                   .ID("gridDivisionalOffice")
                                   .ShowBorders(true)
                                   .AllowColumnReordering(false)
                                   .RowAlternationEnabled(true)
                                   .ShowColumnLines(true)
                                   .FocusedRowEnabled(true)
                                   .SearchPanel(searchPanel => searchPanel
                                       .Width(240)
                                       .Visible(true)
                                       .Placeholder("Search...")
                                   )
                                   .Selection(s => s.Mode(SelectionMode.Single))
                                   .Editing(e => e
                                       .AllowAdding(true)
                                       .AllowUpdating(true)
                                       .AllowDeleting(true)
                                   )
                                   .Paging(p => p.PageSize(20))
                                   .Pager(p => p
                                       .ShowPageSizeSelector(true)
                                       .AllowedPageSizes(new[] { 20, 25, 50, 100 })
                                       .ShowInfo(true)
                                       .InfoText("Page {0} of {1} | Total Items: {2}")
                                   )
                                   .Columns(columns =>
                                   {
                                       columns.AddFor(m => m.Id).Visible(false);
                                       columns.AddFor(m => m.Code).Width("20%");

                                       columns.AddFor(m => m.Name).Caption("Description").Width("60%");

                                       columns.AddFor(m => m.Active).Width("20%");

                                       columns.Add()
                                           .Width(80)
                                           .Caption("Action")
                                           .Type(GridCommandColumnType.Buttons)
                                           .Buttons(b => { b.Add().Icon("fa-solid fa-pen-to-square"); })
                                           .Buttons(b => { b.Add().Icon("fa-solid fa-trash-can"); });
                                   })
                                   .Editing(e => e
                                       .AllowAdding(true)
                                       .AllowUpdating(true)
                                       .AllowDeleting(true)
                                   )
                                   .Toolbar(t => t.Items(items =>
                                       {
                                           items.Add()
                                               .Location(ToolbarItemLocation.Before)
                                               .Widget(w => w.Button()
                                                   .Text("Add New")
                                                   .Type(ButtonType.Default)
                                                   .StylingMode(ButtonStylingMode.Contained)
                                                   .Icon("fa-solid fa-plus")
                                                   .HoverStateEnabled(true)
                                               );

                                           items.Add()
                                               .Location(ToolbarItemLocation.After)
                                               .Widget(w => w.Button()
                                                   .Text("Refresh")
                                                   .Type(ButtonType.Default)
                                                   .StylingMode(ButtonStylingMode.Outlined)
                                                   .Icon("fa-solid fa-arrows-rotate")
                                                   .HoverStateEnabled(true)
                                               );

                                           items.Add().Name("searchPanel");
                                       })
                                   )
                               )
                           </div>

                       </text>);

        tabs.Add().Title("STANDARD WORKS")
                .Template(@<text>

    <div style="padding:20px">
        @(Html.DevExtreme().DataGrid<StandardAct>()
                .Width("100%")
                .Height(460)
                .ID("gridDivisionalOffice1")
                .ShowBorders(true)
                .AllowColumnReordering(false)
                .RowAlternationEnabled(true)
                .ShowColumnLines(true)
                .FocusedRowEnabled(true)
                .SearchPanel(searchPanel => searchPanel
                .Width(240)
                .Visible(true)
                .Placeholder("Search...")
                )
                .Selection(s => s.Mode(SelectionMode.Single))
                .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
                )
                .Paging(p => p.PageSize(20))
                .Pager(p => p
                .ShowPageSizeSelector(true)
                .AllowedPageSizes(new[] { 20, 25, 50, 100 })
                .ShowInfo(true)
                .InfoText("Page {0} of {1} | Total Items: {2}")
                )
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Id).Visible(false);
                    columns.AddFor(m => m.Code).Width("20%");

                    columns.AddFor(m => m.Name).Caption("Description").Width("60%");

                    columns.AddFor(m => m.Active).Width("20%");

                    columns.Add()
                    .Width(80)
                    .Caption("Action")
                    .Type(GridCommandColumnType.Buttons)
                    .Buttons(b => { b.Add().Icon("fa-solid fa-pen-to-square"); })
                    .Buttons(b => { b.Add().Icon("fa-solid fa-trash-can"); });
                })
                .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
                )
                .Toolbar(t => t.Items(items =>
                {
                    items.Add()
                    .Location(ToolbarItemLocation.Before)
                    .Widget(w => w.Button()
                    .Text("Add New")
                    .Type(ButtonType.Default)
                    .StylingMode(ButtonStylingMode.Contained)
                    .Icon("fa-solid fa-plus")
                    .HoverStateEnabled(true)
                    );

                    items.Add()
                    .Location(ToolbarItemLocation.After)
                    .Widget(w => w.Button()
                    .Text("Refresh")
                    .Type(ButtonType.Default)
                    .StylingMode(ButtonStylingMode.Outlined)
                    .Icon("fa-solid fa-arrows-rotate")
                    .HoverStateEnabled(true)
                    );

                    items.Add().Name("searchPanel");
                })
                )
                )
    </div>

</text>);
        ;
    })
)