@using CMS.Areas.Admin.ViewModels
@using CMS.Extensions
@(Html.DevExtreme().DataGrid<ContractorViewModel>()
	.DefaultGridProperties()
	.DefaultToolBar()
	.DataSource(ds => ds.Mvc()
		.Controller("ContractorsApi")
		.LoadAction("Get")
		.InsertAction("Post")
		.UpdateAction("Put")
		.DeleteAction("Delete")
		.Key("ContractorId")
	)
	.ColumnAutoWidth(true)
	.RemoteOperations(true)
	.Columns(columns =>
	{
		columns.AddFor(m => m.TinNo);

		columns.AddFor(m => m.ContractorName);

		columns.AddFor(m => m.ContactPerson);

		columns.AddFor(m => m.Email);

		columns.AddFor(m => m.Phone);

		columns.AddFor(m => m.Type);

		columns.AddFor(m => m.Classification);

		columns.AddFor(m => m.Address)
			.FormItem(f => f.Editor(ed => ed.TextArea()).ColSpan(2));
	})
	.Editing(e => e
		.Mode(GridEditMode.Popup)
		.UseIcons(true)
		.Popup(pp => pp.ShowCloseButton(true).Height("auto").MaxWidth(700))
		.Form(ff => ff.ColCount(1).LabelLocation(FormLabelLocation.Top)
			.Items(it =>
			{
				it.AddGroup()
					.ColCount(2)
					.Items(itt =>
				{
					 
					itt.AddSimpleFor(m => m.TinNo);

					itt.AddSimpleFor(m => m.ContractorName);

					itt.AddSimpleFor(m => m.ContactPerson);

					itt.AddSimpleFor(m => m.Email);

					itt.AddSimpleFor(m => m.Phone);

					itt.AddSimpleFor(m => m.Type);

					itt.AddSimpleFor(m => m.Classification);
				});

				it.AddGroup()
					.ColCount(2)
					.Items(itt =>   itt.AddSimpleFor(m => m.Address).ColSpan(2) );
			}))
		.AllowAdding(true)
		.AllowUpdating(true)
		.AllowDeleting(true))
)